{"/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/test.js":"/* istanbul instrument in package npmtest_react_shallow_testutils */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/lib.npmtest_react_shallow_testutils.js":"/* istanbul instrument in package npmtest_react_shallow_testutils */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_shallow_testutils = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_shallow_testutils = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-shallow-testutils && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_shallow_testutils */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_shallow_testutils\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_shallow_testutils.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_shallow_testutils.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_shallow_testutils.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_shallow_testutils.__dirname + '/lib.npmtest_react_shallow_testutils.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDOMComponent = exports.isComponentOfType = exports.findWithType = exports.findWithRef = exports.findWithClass = exports.findAllWithType = exports.findAllWithClass = exports.findAll = undefined;\n\nvar _findAll2 = require('./find-all');\n\nvar _findAll3 = _interopRequireDefault(_findAll2);\n\nvar _findAllWithClass2 = require('./find-all-with-class');\n\nvar _findAllWithClass3 = _interopRequireDefault(_findAllWithClass2);\n\nvar _findAllWithType2 = require('./find-all-with-type');\n\nvar _findAllWithType3 = _interopRequireDefault(_findAllWithType2);\n\nvar _findWithClass2 = require('./find-with-class');\n\nvar _findWithClass3 = _interopRequireDefault(_findWithClass2);\n\nvar _findWithRef2 = require('./find-with-ref');\n\nvar _findWithRef3 = _interopRequireDefault(_findWithRef2);\n\nvar _findWithType2 = require('./find-with-type');\n\nvar _findWithType3 = _interopRequireDefault(_findWithType2);\n\nvar _isComponentOfType2 = require('./is-component-of-type');\n\nvar _isComponentOfType3 = _interopRequireDefault(_isComponentOfType2);\n\nvar _isDomComponent = require('./is-dom-component');\n\nvar _isDomComponent2 = _interopRequireDefault(_isDomComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.findAll = _findAll3.default;\nexports.findAllWithClass = _findAllWithClass3.default;\nexports.findAllWithType = _findAllWithType3.default;\nexports.findWithClass = _findWithClass3.default;\nexports.findWithRef = _findWithRef3.default;\nexports.findWithType = _findWithType3.default;\nexports.isComponentOfType = _isComponentOfType3.default;\nexports.isDOMComponent = _isDomComponent2.default;","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-all.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAll;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Traverses the tree and returns all elements that satisfy the function `test`.\n *\n * @param  {ReactElement}   tree the tree to traverse\n * @param  {Function} test  the test for each component\n * @return {Array}          the elements that satisfied `test`\n */\nfunction findAll(tree, test) {\n  var found = test(tree) ? [tree] : [];\n\n  if (_react2.default.isValidElement(tree)) {\n    if (_react2.default.Children.count(tree.props.children) > 0) {\n      _react2.default.Children.forEach(tree.props.children, function (child) {\n        found = found.concat(findAll(child, test));\n      });\n    }\n  }\n\n  return found;\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-all-with-class.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAllWithClass;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _findAll = require('./find-all');\n\nvar _findAll2 = _interopRequireDefault(_findAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns true if the given parameter `classNameList` contains the\n * given parameter `className`.\n *\n * @param  {String}  classNameList String of all class names\n * @param  {String}  className     The class name to search for\n * @return {Boolean}\n */\nfunction hasClassName(classNameList, className) {\n  return (' ' + classNameList + ' ').indexOf(' ' + className + ' ') !== -1;\n}\n\n/**\n * Finds all elements in the tree with a class that matches `className`.\n *\n * This is different to React's `scryRenderedDOMComponentsWithClass` in that\n * it will check *all* components and not just DOM components.\n *\n * @param  {ReactElement} tree  the rendered tree to traverse\n * @param  {String} className   the class to find\n * @return {Array}              all matching elements\n */\nfunction findAllWithClass(tree, className) {\n  return (0, _findAll2.default)(tree, function (component) {\n    if (_react2.default.isValidElement(component)) {\n      if (component.props.className != null) {\n\n        if (className.indexOf('.') !== -1) {\n          var classNameList = className.split('.');\n\n          return classNameList.every(function (val) {\n            return hasClassName(component.props.className, val);\n          });\n        }\n\n        return hasClassName(component.props.className, className);\n      }\n\n      return false;\n    }\n\n    return false;\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-all-with-type.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAllWithType;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _findAll = require('./find-all');\n\nvar _findAll2 = _interopRequireDefault(_findAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds all elements in the tree with a `type` prop that matches `type`.\n *\n * This is like both React's `scryRenderedDOMComponentsWithTag` and\n * `scryRenderedComponentsWithType` as you can supply a component class or a\n * DOM tag.\n *\n * @param  {ReactElement} tree    the rendered tree to traverse\n * @param  {Function|String} type the component type or tag to find\n * @return {Array}                all matching elements\n */\nfunction findAllWithType(tree, type) {\n  return (0, _findAll2.default)(tree, function (component) {\n    if (_react2.default.isValidElement(component)) {\n      return component.type != null && component.type === type;\n    }\n\n    return false;\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-with-class.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findWithClass;\n\nvar _findAllWithClass = require('./find-all-with-class');\n\nvar _findAllWithClass2 = _interopRequireDefault(_findAllWithClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Find only one element in the tree with a `className` prop that matches\n * `className`.\n *\n * This is different to React's `findRenderedDOMComponentWithClass` in that\n * it will check *all* components and not just DOM components.\n *\n * @param  {ReactElement} tree  the rendered tree to traverse\n * @param  {String} className   the class to find\n * @return {ReactElement}       the matching element\n */\nfunction findWithClass(root, className) {\n  var found = (0, _findAllWithClass2.default)(root, className);\n\n  if (found.length !== 1) {\n    throw new Error('Did not find exactly one match for class: ' + className);\n  }\n\n  return found[0];\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-with-ref.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findWithRef;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _findAll = require('./find-all');\n\nvar _findAll2 = _interopRequireDefault(_findAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds an element in the tree with a ref that matches `ref`.\n *\n * @param  {ReactElement} tree    the rendered tree to traverse\n * @param  {String}               ref to find\n * @return {ReactElement}         the found element\n */\nfunction findWithRef(tree, ref) {\n  var found = (0, _findAll2.default)(tree, function (component) {\n    if (_react2.default.isValidElement(component)) {\n      return component.ref != null && component.ref === ref;\n    }\n\n    return false;\n  });\n\n  if (found.length !== 1) {\n    throw new Error('Did not find exactly one match for ref: ' + ref);\n  }\n\n  return found[0];\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/find-with-type.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findWithType;\n\nvar _findAllWithType = require('./find-all-with-type');\n\nvar _findAllWithType2 = _interopRequireDefault(_findAllWithType);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Find only one element in the tree with a `type` prop that matches `type`.\n *\n * This is like both React's `findRenderedDOMComponentWithTag` and\n * `findRenderedComponentWithType` as you can supply a component class or a\n * DOM tag.\n *\n * @param  {ReactElement} tree    the rendered tree to traverse\n * @param  {Function|String} type the component type or tag to find\n * @return {ReactElement}         the matching element\n */\nfunction findWithType(root, type) {\n  var found = (0, _findAllWithType2.default)(root, type);\n\n  if (found.length !== 1) {\n    throw new Error('Did not find exactly one match for type: ' + type);\n  }\n\n  return found[0];\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/is-component-of-type.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isComponentOfType;\n/**\n * Returns whether an element instance is of a particular type.\n * @param  {ReactElement}     element       the element to check\n * @param  {Function|String}  componentType the type of element to check against\n * @return {Boolean}                        whether the element is the supplied type\n */\nfunction isComponentOfType(element, componentType) {\n  return element.type === componentType;\n}","/home/travis/build/npmtest/node-npmtest-react-shallow-testutils/node_modules/react-shallow-testutils/lib/is-dom-component.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDOMComponent;\n/**\n * Returns whether an element is a DOM element.\n *\n * @param  {ReactElement}     element\n * @return {Boolean}          whether the element is a DOM element\n */\nfunction isDOMComponent(element) {\n  return typeof element.type === 'string';\n}"}